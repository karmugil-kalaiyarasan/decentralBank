{"ast":null,"code":"import _slicedToArray from \"/Volumes/My Files/Block chain/udemy course/projects/excercise1/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Volumes/My Files/Block chain/udemy course/projects/excercise1/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Volumes/My Files/Block chain/udemy course/projects/excercise1/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/My Files/Block chain/udemy course/projects/excercise1/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Web3 from 'web3';\nimport Tether from '../truffle_abis/Tether.json';\nimport RWD from '../truffle_abis/RWD.json';\nimport DecentralBank from '../truffle_abis/DecentralBank.json';\nimport Main from './Main';\n\nvar App = function App() {\n  useEffect(function () {\n    loadWeb3();\n    updateBlockchainData();\n    loadBlockchainData();\n  }, []);\n\n  var loadWeb3 = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!window.ethereum) {\n                _context.next = 6;\n                break;\n              }\n\n              window.web3 = new Web3(window.ethereum);\n              _context.next = 4;\n              return window.ethereum.enable();\n\n            case 4:\n              _context.next = 7;\n              break;\n\n            case 6:\n              if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider);\n              } else {\n                window.alert(\"No ethereum browser detected! You can check out MetaMask!\");\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadWeb3() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var loadBlockchainData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var web3, account, networkId, tetherData, rwdData, decentralBankData, _tether, _tetherBalance, _rwd, _rwdBalance, _decentralBank, stakingBalanceAvailable;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              web3 = window.web3;\n              _context2.next = 3;\n              return web3.eth.getAccounts();\n\n            case 3:\n              account = _context2.sent;\n              setAccount(account[0]);\n              _context2.next = 7;\n              return web3.eth.net.getId();\n\n            case 7:\n              networkId = _context2.sent;\n              tetherData = Tether.networks[networkId];\n              rwdData = RWD.networks[networkId];\n              decentralBankData = DecentralBank.networks[networkId]; // console.log(tetherData);\n\n              if (!tetherData) {\n                _context2.next = 22;\n                break;\n              }\n\n              _tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n              setTether(_tether);\n              console.log(account);\n              _context2.next = 17;\n              return _tether.methods.balanceOf(account[0]).call();\n\n            case 17:\n              _tetherBalance = _context2.sent;\n              setTetherBalance({\n                tetherBalance: _tetherBalance.toString()\n              });\n              console.log(_tetherBalance);\n              _context2.next = 23;\n              break;\n\n            case 22:\n              window.alert(\"Error! Tether Contract not deployed - No network detected!\");\n\n            case 23:\n              if (!rwdData) {\n                _context2.next = 32;\n                break;\n              }\n\n              _rwd = new web3.eth.Contract(RWD.abi, rwdData.address);\n              setRwd(_rwd);\n              _context2.next = 28;\n              return _rwd.methods.balanceOf(account[0]).call();\n\n            case 28:\n              _rwdBalance = _context2.sent;\n              setRwdBalance({\n                rwdBalance: _rwdBalance.toString()\n              }); // console.log(rwdBalance);\n\n              _context2.next = 33;\n              break;\n\n            case 32:\n              window.alert(\"Error! RWD Contract not deployed - No network detected!\");\n\n            case 33:\n              if (!decentralBankData) {\n                _context2.next = 42;\n                break;\n              }\n\n              _decentralBank = new web3.eth.Contract(DecentralBank.abi, decentralBankData.address);\n              setDecentralBank(_decentralBank);\n              _context2.next = 38;\n              return _decentralBank.methods.stakingBalance(account[0]).call();\n\n            case 38:\n              stakingBalanceAvailable = _context2.sent;\n              setStakingBalance({\n                stakingBalanceAvailable: stakingBalanceAvailable.toString()\n              }); // console.log(stakingBalance);\n\n              _context2.next = 43;\n              break;\n\n            case 42:\n              window.alert(\"Error! DecentralBank Contract not deployed - No network detected!\");\n\n            case 43:\n              setLoading(false);\n              console.log(networkId);\n              console.log(account);\n\n            case 46:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadBlockchainData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var updateBlockchainData = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var web3;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              web3 = window.web3; // window.addEventListener(\"load\",async function(){\n              //     let account = await web3.eth.getAccounts();\n              //     console.log(account);\n              // })\n\n              window.ethereum.on(\"accountsChanged\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                var account;\n                return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.next = 2;\n                        return web3.eth.getAccounts();\n\n                      case 2:\n                        account = _context3.sent;\n\n                      case 3:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              })));\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function updateBlockchainData() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var stakeTokens = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(amount) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              setLoading(true);\n              _context5.next = 3;\n              return tether.methods.approve(decentralBank._address, amount).send({\n                from: account\n              }).on(\"confirmation\", function (confirmation) {\n                decentralBank.methods.depositTokens(amount).send({\n                  from: account\n                }).on(\"transactionHash\", function (hash) {\n                  setLoading(false);\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function stakeTokens(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var unstakeTokens = function unstakeTokens() {\n    setLoading(true);\n    decentralBank.methods.unstakeTokens().send({\n      from: account\n    }).on('transactionHash', function (hash) {\n      setLoading(false);\n    });\n  };\n\n  var _useState = useState(\"0x0454656\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      account = _useState2[0],\n      setAccount = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tether = _useState4[0],\n      setTether = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      rwd = _useState6[0],\n      setRwd = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      decentralBank = _useState8[0],\n      setDecentralBank = _useState8[1];\n\n  var _useState9 = useState(\"0\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      tetherBalance = _useState10[0],\n      setTetherBalance = _useState10[1];\n\n  var _useState11 = useState(\"0\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      rwdBalance = _useState12[0],\n      setRwdBalance = _useState12[1];\n\n  var _useState13 = useState(\"0\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      stakingBalance = _useState14[0],\n      setStakingBalance = _useState14[1];\n\n  var _useState15 = useState(true),\n      _useState16 = _slicedToArray(_useState15, 2),\n      loading = _useState16[0],\n      setLoading = _useState16[1];\n\n  var content;\n  {\n    loading ? content = /*#__PURE__*/React.createElement(\"p\", {\n      id: \"loader\",\n      className: \"text-center\",\n      style: {\n        margin: \"30px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }\n    }, \"LOADING PLEASE...\") : content = /*#__PURE__*/React.createElement(Main, {\n      tetherBalance: tetherBalance,\n      rwdBalance: rwdBalance,\n      stakingBalance: stakingBalance,\n      stakeTokens: stakeTokens,\n      unstakeTokens: unstakeTokens,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    account: account,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    className: \"col-lg-12 ml-auto mr-auto\",\n    style: {\n      maxWidth: '600px',\n      minHeight: '100vm'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, content)))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Volumes/My Files/Block chain/udemy course/projects/excercise1/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"names":["React","useEffect","useState","Navbar","Web3","Tether","RWD","DecentralBank","Main","App","loadWeb3","updateBlockchainData","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","account","setAccount","net","getId","networkId","tetherData","networks","rwdData","decentralBankData","tether","Contract","abi","address","setTether","console","log","methods","balanceOf","call","tetherBalance","setTetherBalance","toString","rwd","setRwd","rwdBalance","setRwdBalance","decentralBank","setDecentralBank","stakingBalance","stakingBalanceAvailable","setStakingBalance","setLoading","on","stakeTokens","amount","approve","_address","send","from","confirmation","depositTokens","hash","unstakeTokens","loading","content","margin","maxWidth","minHeight"],"mappings":"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","sourcesContent":["import React, { useEffect,useState } from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Web3 from 'web3';\nimport Tether from '../truffle_abis/Tether.json';\nimport RWD from '../truffle_abis/RWD.json';\nimport DecentralBank from '../truffle_abis/DecentralBank.json';\nimport Main from './Main';\n\nconst App = () => {\n\n    useEffect(() => {\n        loadWeb3();\n\n        updateBlockchainData();\n        loadBlockchainData();\n    }, [])\n\n    const loadWeb3 = async()=>{\n        if(window.ethereum){\n            window.web3 = new Web3(window.ethereum);\n            await window.ethereum.enable();\n        }else if(window.web3){\n            window.web3 = new Web3(window.web3.currentProvider);\n        }else{\n            window.alert(\"No ethereum browser detected! You can check out MetaMask!\");\n        }\n    }\n\n    const loadBlockchainData=async()=>{\n        const web3 = window.web3;\n        const account = await web3.eth.getAccounts();\n        setAccount(account[0]);\n        const networkId = await web3.eth.net.getId();\n        const tetherData = Tether.networks[networkId];\n        const rwdData = RWD.networks[networkId];\n        const decentralBankData = DecentralBank.networks[networkId];\n        // console.log(tetherData);\n        if(tetherData){\n            const tether = new web3.eth.Contract(Tether.abi,tetherData.address);\n            setTether(tether);\n            console.log(account);\n            let tetherBalance = await tether.methods.balanceOf(account[0]).call();\n             setTetherBalance({tetherBalance:tetherBalance.toString()});\n             console.log(tetherBalance);\n        }else{\n            window.alert(\"Error! Tether Contract not deployed - No network detected!\");\n        }\n\n        if(rwdData){\n            const rwd = new web3.eth.Contract(RWD.abi,rwdData.address);\n            setRwd(rwd);\n            let rwdBalance = await rwd.methods.balanceOf(account[0]).call();\n            setRwdBalance({rwdBalance:rwdBalance.toString()});\n            // console.log(rwdBalance);\n        }else{\n            window.alert(\"Error! RWD Contract not deployed - No network detected!\");\n        }\n\n        if(decentralBankData){\n            const decentralBank = new web3.eth.Contract(DecentralBank.abi,decentralBankData.address);\n            setDecentralBank(decentralBank);\n            let stakingBalanceAvailable = await decentralBank.methods.stakingBalance(account[0]).call();\n            setStakingBalance({stakingBalanceAvailable:stakingBalanceAvailable.toString()});\n            // console.log(stakingBalance);\n        }else{\n            window.alert(\"Error! DecentralBank Contract not deployed - No network detected!\");\n        }\n        setLoading(false);\n        console.log(networkId);\n        console.log(account);\n    }\n\n    const updateBlockchainData = async()=>{\n        const web3 = window.web3;\n        // window.addEventListener(\"load\",async function(){\n        //     let account = await web3.eth.getAccounts();\n        //     console.log(account);\n        // })\n        window.ethereum.on(\"accountsChanged\",async function(){\n            let account = await web3.eth.getAccounts();\n            // console.log(account);\n        })\n    }\n\n    const stakeTokens = async(amount)=>{\n        setLoading(true);\n        await tether.methods.approve(decentralBank._address,amount).send({from: account}).on(\"confirmation\",(confirmation)=>{\n         decentralBank.methods.depositTokens(amount).send({from: account}).on(\"transactionHash\",(hash)=>{\n        setLoading(false);\n    })      \n    })\n    }\n\n    const unstakeTokens=()=>{\n        setLoading(true);\n        decentralBank.methods.unstakeTokens().send({from: account}).on('transactionHash',(hash)=>{\n            setLoading(false);\n        })\n    }\n\n    const [account,setAccount] = useState(\"0x0454656\");\n    const [tether,setTether] = useState({});\n    const [rwd,setRwd] = useState({});\n    const [decentralBank,setDecentralBank] = useState({});\n    const [tetherBalance,setTetherBalance] = useState(\"0\");\n    const [rwdBalance,setRwdBalance] = useState(\"0\");\n    const [stakingBalance,setStakingBalance] = useState(\"0\");\n    const [loading,setLoading] = useState(true); \n\n    let content;\n    {\n        loading ? content = <p id=\"loader\" className=\"text-center\" style={{margin:\"30px\"}}>LOADING PLEASE...</p>\n        : content = <Main tetherBalance={tetherBalance} rwdBalance={rwdBalance} stakingBalance={stakingBalance} stakeTokens={stakeTokens} unstakeTokens={unstakeTokens} />\n    }\n\n    return (\n        <div>\n            <Navbar account={account} />\n            <div className=\"container-fluid mt-5\">\n                <div className=\"row\">\n                    <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{maxWidth:'600px',minHeight:'100vm'}}>\n                        <div>\n                            {content}\n                        </div>\n                    </main>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}