{"ast":null,"code":"import _slicedToArray from \"/Volumes/My Files/Block chain/udemy course/projects/excercise1/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Volumes/My Files/Block chain/udemy course/projects/excercise1/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Volumes/My Files/Block chain/udemy course/projects/excercise1/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/My Files/Block chain/udemy course/projects/excercise1/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Web3 from 'web3';\n\nvar App = function App() {\n  useEffect(function () {\n    loadWeb3();\n\n    var loadBlockchainData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var web3;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3; // window.addEventListener(\"load\",async function(){\n                //     let account = await web3.eth.getAccounts();\n                //     console.log(account);\n                // })\n\n                window.ethereum.on(\"load\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                  var account;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return web3.eth.getAccounts();\n\n                        case 2:\n                          account = _context.sent;\n                          console.log(account);\n\n                        case 4:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                })));\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function loadBlockchainData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    loadBlockchainData();\n  }, []);\n\n  var loadWeb3 = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!window.ethereum) {\n                _context3.next = 6;\n                break;\n              }\n\n              window.web3 = new Web3(window.ethereum);\n              _context3.next = 4;\n              return window.ethereum.enable();\n\n            case 4:\n              _context3.next = 7;\n              break;\n\n            case 6:\n              if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider);\n              } else {\n                window.alert(\"No ethereum browser detected! You can check out MetaMask!\");\n              }\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function loadWeb3() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var _useState = useState(\"0x0454656\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      account = _useState2[0],\n      setAccount = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    account: account,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Volumes/My Files/Block chain/udemy course/projects/excercise1/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"names":["React","useEffect","useState","Navbar","Web3","App","loadWeb3","loadBlockchainData","web3","window","ethereum","on","eth","getAccounts","account","console","log","enable","currentProvider","alert","setAccount"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAEdJ,EAAAA,SAAS,CAAC,YAAM;AACZK,IAAAA,QAAQ;;AACR,QAAMC,kBAAkB;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,gBAAAA,IADiB,GACVC,MAAM,CAACD,IADG,EAEvB;AACA;AACA;AACA;;AACAC,gBAAAA,MAAM,CAACC,QAAP,CAAgBC,EAAhB,CAAmB,MAAnB,wEAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACFH,IAAI,CAACI,GAAL,CAASC,WAAT,EADE;;AAAA;AAClBC,0BAAAA,OADkB;AAEtBC,0BAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AAFsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA1B;;AANuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAlBP,kBAAkB;AAAA;AAAA;AAAA,OAAxB;;AAWAA,IAAAA,kBAAkB;AACrB,GAdQ,EAcN,EAdM,CAAT;;AAgBA,MAAMD,QAAQ;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA,mBACVG,MAAM,CAACC,QADG;AAAA;AAAA;AAAA;;AAETD,cAAAA,MAAM,CAACD,IAAP,GAAc,IAAIJ,IAAJ,CAASK,MAAM,CAACC,QAAhB,CAAd;AAFS;AAAA,qBAGHD,MAAM,CAACC,QAAP,CAAgBO,MAAhB,EAHG;;AAAA;AAAA;AAAA;;AAAA;AAIP,kBAAGR,MAAM,CAACD,IAAV,EAAe;AACjBC,gBAAAA,MAAM,CAACD,IAAP,GAAc,IAAIJ,IAAJ,CAASK,MAAM,CAACD,IAAP,CAAYU,eAArB,CAAd;AACH,eAFK,MAED;AACDT,gBAAAA,MAAM,CAACU,KAAP,CAAa,2DAAb;AACH;;AARY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARb,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAlBc,kBA+BeJ,QAAQ,CAAC,WAAD,CA/BvB;AAAA;AAAA,MA+BPY,OA/BO;AAAA,MA+BCM,UA/BD;;AAiCd,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEN,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAtCD;;AAwCA,eAAeT,GAAf","sourcesContent":["import React, { useEffect,useState } from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Web3 from 'web3';\n\nconst App = () => {\n\n    useEffect(() => {\n        loadWeb3();\n        const loadBlockchainData = async()=>{\n            const web3 = window.web3;\n            // window.addEventListener(\"load\",async function(){\n            //     let account = await web3.eth.getAccounts();\n            //     console.log(account);\n            // })\n            window.ethereum.on(\"load\",async function(){\n                let account = await web3.eth.getAccounts();\n                console.log(account);\n            })\n        }\n        loadBlockchainData();\n    }, [])\n\n    const loadWeb3 = async()=>{\n        if(window.ethereum){\n            window.web3 = new Web3(window.ethereum);\n            await window.ethereum.enable();\n        }else if(window.web3){\n            window.web3 = new Web3(window.web3.currentProvider);\n        }else{\n            window.alert(\"No ethereum browser detected! You can check out MetaMask!\");\n        }\n    }\n\n\n\n    const [account,setAccount] = useState(\"0x0454656\");\n\n    return (\n        <div>\n            <Navbar account={account} />\n        </div>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}